echo "running .zshrc"

DROPBOX="$HOME/Dropbox"
DESKTOP="$DROPBOX/Desktop"
DEV="$HOME/dev"
DROPBOX_DEV="$DROPBOX/dev"
NOTEBOOK="$DROPBOX/notebook"
CODESNIP="$DEV/CodeSnips-Notes"
POSH_CONFIG="$CODESNIP/configs/common/posh.omp.json"
SNIPPETS="$CODESNIP/snippets"
SCRIPTS="$CODESNIP/scripts"

# ========================================
# User specific environment
# ========================================

export PATH="$HOME/.local/bin:$HOME/bin:$CODESNIP/scripts:$PATH"

# ========================================
# Prompt
# ========================================

autoload -U promptinit
promptinit
PS1='%F{cyan}%n%F{red}@%F{green}%m%F{magenta}:%~%F{red}$%f '

# Completion settings
autoload -Uz compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
bindkey '^I' menu-complete
bindkey '^[[Z' reverse-menu-complete

eval "$(oh-my-posh init zsh --config "$POSH_CONFIG")"

# ========================================
# direnv
# ========================================

eval "$(direnv hook zsh)"

# ========================================
# fzf
# ========================================

if command -v fzf >/dev/null; then
  source <(fzf --zsh)
fi

# ========================================
# Light and Dark Mode
# ========================================

light() {
  export BAT_THEME="gruvbox-light"
  alacritty msg config "$(cat ~/.config/alacritty/light.toml)"
}

dark() {
  export BAT_THEME=""
  alacritty msg config "$(cat ~/.config/alacritty/alacritty.toml)"
}

# ========================================
# Shortcuts
# ========================================

alias desktop="cd $DESKTOP"
alias dev="cd $DEV"
alias dropdev="cd $DROPBOX_DEV"
alias codesnip="cd $CODESNIP"
alias notebook="cd $NOTEBOOK"

# ========================================
# Utils
# ========================================

alias ls='eza'
alias la='eza -lah --git'

alias copy="pbcopy"
alias paste="pbpaste"

alias feh="feh --geometry 1680x1390 --scale-down --edit"

alias ..="cd .."

runbg() {
  nohup "$@" >/dev/null 2>&1 &
}
compdef '_files' runbg

clear() {
  printf '\033[2J\033[3J\033[1;1H'
}

# ========================================
# Notes & Snippets
# ========================================

alias snips="cd $SNIPPETS"
snip() {
  read -r "name?Enter snippet name: "
  nvim "$SNIPPETS/$(date '+%Y%m')-${name}.md"
}
alias snippets="ls $SNIPPETS"

note() {
  if [[ -z $1 ]]; then
    echo "Error: Provide note name"
    return 1
  fi
  nvim "$NOTEBOOK/0-unprocessed/$1.md"
}

todo() {
  if [[ -z $1 ]]; then
    nvim "$NOTEBOOK/TODO.md"
  else
    nvim "$NOTEBOOK/TODO-$1.md"
  fi
}

alias scratch="nvim $NOTEBOOK/SCRATCH.md"

mem() {
  nvim "$NOTEBOOK/mem.md"
}

journal() {
  nvim "$NOTEBOOK/journal/$(date '+%Y%m%d').md"
}

# ========================================
# JavaScript
# ========================================

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"                                       # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# ========================================
# Python
# ========================================

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv >/dev/null; then
  eval "$(pyenv init -)"
fi

alias venv="source venv/bin/activate"

# ========================================
# Java
# ========================================

idea() {
  [[ -z $1 ]] && runbg idea.sh . || runbg idea.sh $1
}
compdef '_files' idea

[[ -s "/home/cuse/.jabba/jabba.sh" ]] && source "/home/cuse/.jabba/jabba.sh"

# ========================================
# Rust
# ========================================

[[ -x "$(command -v rustup)" ]] && source "$HOME/.cargo/env"

# ========================================
# Screenshots
# ========================================

alias screenshot="import png:- | xclip -selection clipboard -t image/png"

manage_screenshots() {
  runbg "$SCRIPTS/screenshot-log.sh"
}

# ========================================
# zoxide (must be at end of file)
# ========================================

eval "$(zoxide init zsh)"
