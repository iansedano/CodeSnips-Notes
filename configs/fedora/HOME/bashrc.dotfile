echo "running .bashrc"

DROPBOX="$HOME/Dropbox"
DESKTOP="$DROPBOX/Desktop"
DEV="$HOME/dev"
DROPBOX_DEV="$DROPBOX/dev"
NOTEBOOK="$DROPBOX/notebook"
CODESNIP="$DEV/CodeSnips-Notes"
SNIPPET_LOG="$NOTEBOOK/snippet-log.md"
PROFILE="$HOME/.bashrc"

if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

export HISTFILESIZE=10000

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Prompt
PS1='\[\033[1;36m\]\u\[\033[1;31m\]@\[\033[1;32m\]\h:\[\033[1;35m\]\w\[\033[1;31m\]\$\[\033[0m\] '
bind 'set completion-ignore-case on'
bind "TAB:menu-complete"
bind '"\e[Z": menu-complete-backward'
bind "set show-all-if-ambiguous off"

eval "$(oh-my-posh init bash --config $CODESNIP/configs/common/posh.omp.json)"

# direnv (maybe the above can be put into direnv?)
eval "$(direnv hook bash)"

# z
if [ -f ~/opt/z/z.sh ]; then
    . ~/opt/z/z.sh
fi

if [ -f /opt/z/z.sh ]; then
    . /opt/z/z.sh
fi

# fzf
if [ -x "$(command -v fzf)"  ]
then
	source /usr/share/fzf/shell/key-bindings.bash
fi

# aliases and utilities
light () {
  export BAT_THEME="gruvbox-light"
  alacritty msg config "$(cat ~/.config/alacritty/light.toml)"
}

dark () {
  export BAT_THEME=""
  alacritty msg config "$(cat ~/.config/alacritty/alacritty.toml)"
}

alias open='xdg-open'
alias la='eza -lah'
alias desktop="cd $DESKTOP"
alias dev="cd $DEV"
alias dropdev="cd $DROPBOX_DEV"
alias codesnip="cd $CODESNIP"
alias notebook="cd $NOTEBOOK"
alias mkvenv="mkdir venv; echo 'venv' > .dbignore; dbignore; python -m venv venv; source venv/bin/activate"
alias copy="xclip -selection clipboard"
alias paste="xclip -selection clipboard -o"
alias feh="feh --geometry 1680x1390 --scale-down --edit"
alias venv="source venv/bin/activate"
alias screenshot="import png:- | xclip -selection clipboard -t image/png"
alias scratch="nvim $NOTEBOOK/SCRATCH.md"
alias snips="cd $NOTEBOOK/snippets"
alias ..="cd .."

idea(){
  if [[ -z $1 ]]; then
    runbg idea.sh $1
  else
    runbg idea.sh .
  fi
}
complete -c idea

bashrc(){
  nvim ~/.bashrc
  source ~/.bashrc
}

note(){
    if [[ -z $1 ]]; then
        echo "Error: Provide note name"
        return 1
    else
        nvim "$NOTEBOOK/0-unprocessed/$1.md"
    fi
}

todo(){
    if [[ -z $1 ]]; then
        nvim "$NOTEBOOK/TODO.md"
    else
        nvim "$NOTEBOOK/TODO-$1.md"
    fi
}

snip() {
  read -p "Enter snippet name: " name
  nvim "$NOTEBOOK/snippets/$(date '+%Y%m')-${name}.md"
}

alias snippets="ls $NOTEBOOK/snippets"

journal() {
  nvim "$NOTEBOOK/journal/$(date '+%Y%m%d').md"
}

mem() {
  nvim "$NOTEBOOK/mem.md"
}

runbg() {
  nohup "$@" > /dev/null 2>&1 &
}
complete -c runbg

# function cd() {
#     builtin cd "$@" && {
#         if [ -f "venv/bin/activate" ];
#             . venv/bin/activate
#             echo "Activated virtual environment."
#         fi
#     }
# }

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1
then
  eval "$(pyenv init -)"
fi

# jabba
[ -s "/home/cuse/.jabba/jabba.sh" ] && source "/home/cuse/.jabba/jabba.sh"

# rust (after rustup is installed)
. "$HOME/.cargo/env"

function manage_screenshots() {
  runbg $CODESNIP/scripts/screenshot-log.sh
}
